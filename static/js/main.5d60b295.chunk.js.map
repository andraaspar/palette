{"version":3,"sources":["model/OutputFomat.ts","model/constants.ts","store/UiStore.ts","store/PalettesStore.ts","fun/normalizeValue.ts","hook/useHandle.ts","comp/HandlesComp.tsx","comp/PaletteComp.tsx","comp/PalettesComp.tsx","fun/applyInterpolation.ts","fun/colorToHexString.ts","fun/getExtensionByOutputFormat.ts","fun/getNameByOutputFormat.ts","fun/linearInterpolation.ts","fun/wrapColor.ts","hook/useInput.ts","fun/joinFilter.ts","fun/join.ts","fun/joinArrayWith.ts","fun/joinWith.ts","comp/ToolbarComp.tsx","hook/useOutput.ts","fun/easeInInterpolation.ts","fun/easeOutInterpolation.ts","fun/easeInOutInterpolation.ts","comp/AppComp.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["OutputFormat","BREAKPOINT","UiStore","Store","background","showHue","showSaturation","showLightness","showAlpha","selectedPaletteId","selectedColorIndex","lastSelectedColorIndex","outputFormat","Css","subscribe","s","update","PalettesStore","get","jsonFromUri","window","location","hash","slice","id","v4","withInterface","palettesById","name","colors","hue","saturation","lightness","alpha","paletteOrder","fileName","normalizeValue","v","useHandle","o","onPointerDown","e","isPrimary","dragStartValue","value","dragStartHeight","currentTarget","parentElement","getBoundingClientRect","height","dragStartPointerY","pageY","onPointerMove","clamp","Math","max","min","setValue","onPointerUp","removeEventListener","addEventListener","HandlesComp","props","useState","hueHandle","_color","_palette","_index","saturationHandle","lightnessHandle","alphaHandle","className","handlesCss","hueCss","style","top","saturationCss","lightnessCss","alphaCss","jsonToUri","css","controlCss","position","width","border","borderRadius","textAlign","fontSize","lineHeight","padding","overflow","color","transform","userSelect","cursor","cx","PaletteComp","count","length","percentSize","hueD","map","index","arr","v1","v2","i1","i2","offset","diff","ceil","floor","popOut","join","saturationD","lightnessD","alphaD","paletteCss","paletteColorsCss","swatchCss","_isSelected","_lastSelectedColorIndex","swatchLastSelectedCss","_selectedColorIndex","swatchSelectedCss","paletteLinesWrapperCss","paletteLinesCss","viewBox","preserveAspectRatio","backLineCss","d","frontLineCss","stroke","paletteHandlesCss","addButtonCss","title","onClick","lastColor","push","left","bottom","right","fill","content","opacity","PalettesComp","palettesCss","paletteId","paletteIndex","flex","display","flexDirection","applyInterpolation","interpolation","getRawState","palette","c1","c2","steps","i","t","c","colorToHexString","hex","round","toString","toUpperCase","padStart","getExtensionByOutputFormat","f","Gimp","Synfig","Error","getNameByOutputFormat","linearInterpolation","wrapColor","WrappedColor","hsl","useInput","inputFocusedRef","useRef","valueToString","$value","set$value","useEffect","current","onFocus","setSelectionRange","onBlur","valueFromString","onChange","joinFilter","n","rest","filter","joinArrayWith","joiner","joinWith","ToolbarComp","$radioGroupId","wrappedColor","hueInput","hueFromString","hueToString","saturationInput","percentFromString","percentToString","lightnessInput","alphaInput","redInput","red","setRGBA","green","blue","rgbValueFromString","numberToString","greenInput","blueInput","hexInput","identity","output","useMemo","useOutput","outputHref","file","Blob","type","URL","createObjectURL","toolbarCss","labelWrapperCss","labelCss","inputCss","onFocusSelect","enumValues","anOutputFormat","radioGroup","checked","outputCss","disabled","buttonRowCss","navigator","clipboard","writeText","href","download","newSelectedPaletteId","confirm","newSelectedColorIndex","indexOf","splice","pow","easeInInterpolation","easeOutInterpolation","abs","easeInOutInterpolation","gap","maxWidth","format","Intl","NumberFormat","useGrouping","isNaN","parseFloat","r","g","b","a","newColor","rgb","saturationl","AppComp","appCss","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","origin","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"mIAAYA,E,sDCACC,EAAa,S,kBDAdD,K,UAAAA,E,YAAAA,E,iBAAAA,M,KEeL,IAAME,EAAU,IAAIC,IAAgB,CAC1CC,YAAY,EACZC,SAAS,EACTC,gBAAgB,EAChBC,eAAe,EACfC,WAAW,EACXC,kBAAmB,GACnBC,mBAAoB,EACpBC,uBAAwB,EACxBC,aAAcZ,EAAaa,MAG5BX,EAAQY,WACP,SAACC,GAAD,OAAOA,EAAEL,sBACT,SAACA,EAAoBK,EAAGJ,GACvBT,EAAQc,QAAO,SAACD,GACfA,EAAEJ,uBAAyBA,Q,qCCjBjBM,EAAgB,IAAId,IAAJ,UAC5Be,eAAI,kBAAMC,sBAAYC,OAAOC,SAASC,KAAKC,MAAM,cADrB,QAE1B,WACA,IAAMC,EAAKC,cACX,OAAOC,wBAA8B,CACpCC,aAAa,eACXH,EAAKE,wBAAuB,CAC5BF,GAAIA,EACJI,KAAM,GACNC,OAAQ,CACPH,wBAAqB,CACpBF,GAAIC,cACJG,KAAM,GACNE,IAAK,EACLC,WAAY,GACZC,UAAW,GACXC,MAAO,QAKXC,aAAc,CAACV,GACfW,SAAU,aApBX,IChBI,SAASC,EAAeC,GAC9B,OAAU,IAANA,EAAgBA,IACpBA,GAAK,GACG,GAAGA,IACJA,GAAK,GCEN,SAASC,EAAUC,GACzB,MAAO,CACNC,cADM,SACQC,GACb,GAAIA,EAAEC,UAAW,CAChB,IAAMC,EAAiBJ,EAAEK,MAEnBC,EACLJ,EAAEK,cAAcC,cAAeC,wBAAwBC,OAAS,GAC3DC,EAAoBT,EAAEU,MACtBC,EAAgB,SAACX,GACtB,GAAIA,EAAEC,UAAW,CAChB,IAAIE,EACHD,GAAkBF,EAAEU,MAAQD,GAAqBL,EAC9CN,EAAEc,QACLT,EAAQU,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGZ,KAEjCL,EAAEkB,SAASb,KAGPc,EAAc,SAAdA,EAAejB,GAChBA,EAAEC,YACLtB,OAAOuC,oBAAoB,cAAeP,GAC1ChC,OAAOuC,oBAAoB,YAAaD,GACxCtC,OAAOuC,oBAAoB,gBAAiBD,KAG9CtC,OAAOwC,iBAAiB,cAAeR,GACvChC,OAAOwC,iBAAiB,YAAaF,GACrCtC,OAAOwC,iBAAiB,gBAAiBF,MCnBtC,SAASG,EAAYC,GAA0B,IAAD,EAMhD5D,EAAQ6D,UAAS,SAAChD,GAAD,MAAQ,CAC5BP,UAAWO,EAAEP,UACbH,QAASU,EAAEV,QACXE,cAAeQ,EAAER,cACjBD,eAAgBS,EAAET,mBARlBE,EAFmD,EAEnDA,UACAH,EAHmD,EAGnDA,QACAE,EAJmD,EAInDA,cACAD,EALmD,EAKnDA,eAOK0D,EAAY1B,EAAU,CAC3BM,MAAOkB,EAAMG,OAAOnC,IACpB2B,SAAU,SAAC3B,GACVb,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAamC,EAAMI,SAAS1C,IAAIK,OAAOiC,EAAMK,QAAQrC,IAAMA,MAG/DuB,OAAO,IAEFe,EAAmB9B,EAAU,CAClCM,MAAOkB,EAAMG,OAAOlC,WACpB0B,SAAU,SAAC1B,GACVd,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAamC,EAAMI,SAAS1C,IAAIK,OACjCiC,EAAMK,QACLpC,WAAaA,MAGjBsB,OAAO,IAEFgB,EAAkB/B,EAAU,CACjCM,MAAOkB,EAAMG,OAAOjC,UACpByB,SAAU,SAACzB,GACVf,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAamC,EAAMI,SAAS1C,IAAIK,OACjCiC,EAAMK,QACLnC,UAAYA,MAGhBqB,OAAO,IAEFiB,EAAchC,EAAU,CAC7BM,MAAOkB,EAAMG,OAAOhC,MACpBwB,SAAU,SAACxB,GACVhB,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAamC,EAAMI,SAAS1C,IAAIK,OAAOiC,EAAMK,QAAQlC,MAAQA,MAGjEoB,OAAO,IAER,OACC,sBACCkB,UAAWC,EACXd,YAAa,WACZxD,EAAQc,QAAO,SAACD,GACfA,EAAEN,kBAAoBqD,EAAMI,SAAS1C,GACrCT,EAAEL,mBAAqBoD,EAAMK,WALhC,UASE9D,GACA,qBACCkE,UAAWE,EACXC,MAAO,CACNC,IAAI,qCAAD,OAAuCvC,EACzC0B,EAAMG,OAAOnC,KADX,MAIJU,cAAewB,EAAUxB,cAP1B,eAYAlC,GACA,qBACCiE,UAAWK,EACXF,MAAO,CACNC,IAAI,qCAAD,OAAuCvC,EACzC0B,EAAMG,OAAOlC,YADX,MAIJS,cAAe4B,EAAiB5B,cAPjC,eAYAjC,GACA,qBACCgE,UAAWM,EACXH,MAAO,CACNC,IAAI,qCAAD,OAAuCvC,EACzC0B,EAAMG,OAAOjC,WADX,MAIJQ,cAAe6B,EAAgB7B,cAPhC,eAYAhC,GACA,qBACC+D,UAAWO,EACXJ,MAAO,CACNC,IAAI,qCAAD,OAAuCvC,EACzC0B,EAAMG,OAAOhC,OADX,MAIJO,cAAe8B,EAAY9B,cAP5B,kBH5EJvB,EAAcH,WACb,SAACC,GAAD,OAAOA,KACP,SAACA,GACAK,OAAOC,SAASC,KAAO,IAAMyD,oBAAUhE,MAIzCK,OAAOwC,iBAAiB,cAAc,SAACnB,GACtCxB,EAAcD,QAAO,kBAAMG,sBAAYC,OAAOC,SAASC,KAAKC,MAAM,UGoFnE,IAAMiD,EAAaQ,YAAI,0FAQjBC,EAAaD,YAAI,CACtBE,SAAU,WACVP,IAAK,EACLQ,MAAO,OACPlC,OAAQ,OACRmC,OAAO,kBACPC,aAAa,MACbC,UAAW,SACXC,SAAU,MACVC,WAAY,MACZC,QAAS,QACTC,SAAU,SACVC,MAAO,QACPC,UAAU,wBACVC,WAAY,OACZC,OAAQ,WAfa,OAkBhBrB,EAASsB,YACdd,EACAD,YAAI,mDAMCJ,EAAgBmB,YACrBd,EACAD,YAAI,sDAMCH,EAAekB,YACpBd,EACAD,YAAI,oDAMCF,EAAWiB,YAChBd,EACAD,YAAI,sDCzKE,SAASgB,EAAYlC,GAC3B,IAAMmC,EAAQnC,EAAMI,SAASrC,OAAOqE,OAC9BC,EAAc,IAAMF,EA2B1B,IAAMG,EAAOtC,EAAMI,SAASrC,OAC1BwE,KACA,SAACV,EAAOW,EAAOC,GAAf,aA5BF,SACCC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAU,MAANJ,GAAoB,MAANC,EAAY,CAC7B,IAAMI,EAAmB,KAAXJ,EAAKD,GACnB,IACEA,EAAK,EACHC,GAAM,GAAKnD,KAAKwD,KAAKL,GAAMnD,KAAKwD,KAAKN,GACrClD,KAAKyD,MAAMN,GAAMnD,KAAKyD,MAAMP,MAC9BA,GAAM,EACJC,EAAK,GAAKnD,KAAKyD,MAAMN,GAAMnD,KAAKyD,MAAMP,GACtClD,KAAKwD,KAAKL,GAAMnD,KAAKwD,KAAKN,IAE7B,MAAM,KAAN,QAAaG,EAAKC,GAAUT,EAA5B,YACC,KAA4B,IAArB/D,EAAeoE,GAAYK,GADnC,eAEOH,EAAKE,GAAUT,EAFtB,YAGC,KAA4B,IAArB/D,EAAeqE,GAAYI,IAIrC,MAAO,GAKLG,CAAM,UAACT,EAAID,EAAQ,UAAb,aAAC,EAAgBxE,IAAK6D,EAAM7D,IAAKwE,EAAQ,EAAGA,EAAO,KAC9C,IAAVA,EAAc,KAAO,OACrBH,EAAcG,EAAsB,GAAdH,GACvB,KACC,IAAkC,IAA5B/D,EAAeuD,EAAM7D,SAE7BmF,KAAK,KACDC,EAAcpD,EAAMI,SAASrC,OACjCwE,KACA,SAACV,EAAOW,EAAOC,GAAf,OACY,IAAVD,EAAc,KAAO,OACrBH,EAAcG,EAAsB,GAAdH,GACvB,KACC,IAAyC,IAAnC/D,EAAeuD,EAAM5D,gBAE7BkF,KAAK,KACDE,EAAarD,EAAMI,SAASrC,OAChCwE,KACA,SAACV,EAAOW,EAAOC,GAAf,OACY,IAAVD,EAAc,KAAO,OACrBH,EAAcG,EAAsB,GAAdH,GACvB,KACC,IAAwC,IAAlC/D,EAAeuD,EAAM3D,eAE7BiF,KAAK,KACDG,EAAStD,EAAMI,SAASrC,OAC5BwE,KACA,SAACV,EAAOW,EAAOC,GAAf,OACY,IAAVD,EAAc,KAAO,OACrBH,EAAcG,EAAsB,GAAdH,GACvB,KACC,IAAoC,IAA9B/D,EAAeuD,EAAM1D,WAE7BgF,KAAK,KAjE6C,EAuEhD/G,EAAQ6D,UAAS,SAAChD,GAAD,MAAQ,CAC5BP,UAAWO,EAAEP,UACbH,QAASU,EAAEV,QACXE,cAAeQ,EAAER,cACjBD,eAAgBS,EAAET,mBARlBE,EAnEmD,EAmEnDA,UACAH,EApEmD,EAoEnDA,QACAE,EArEmD,EAqEnDA,cACAD,EAtEmD,EAsEnDA,eAOD,OACC,sBAAKiE,UAAW8C,EAAhB,UACC,sBAAK9C,UAAW+C,EAAhB,UACExD,EAAMI,SAASrC,OAAOwE,KAAI,SAACV,EAAOW,GAAR,OAC1B,qBAEC/B,UAAWwB,YACVwB,EACAzD,EAAM0D,aACL1D,EAAM2D,0BAA4BnB,GAClCoB,EACD5D,EAAM0D,aACL1D,EAAM6D,sBAAwBrB,GAC9BsB,GAEFlD,MAAO,CACNtE,WAAW,QAAD,OAAUuF,EAAM7D,IAAhB,iBAA+C,IAAnB6D,EAAM5D,WAAlC,cACS,IAAlB4D,EAAM3D,UADG,cAEU,IAAd2D,EAAM1D,MAFF,QAXN0D,EAAMnE,OAiBb,qBAAK+C,UAAWsD,EAAhB,SACC,sBACCtD,UAAWuD,EACXC,QAAO,cACPC,oBAAoB,OAHrB,UAKE3H,GACA,qCACC,sBAAMkE,UAAW0D,EAAaC,EAAG9B,IACjC,sBACC7B,UAAW4D,EACXzD,MAAO,CAAE0D,OAAQ,OACjBF,EAAG9B,OAIL9F,GACA,qCACC,sBAAMiE,UAAW0D,EAAaC,EAAGhB,IACjC,sBACC3C,UAAW4D,EACXzD,MAAO,CAAE0D,OAAQ,SACjBF,EAAGhB,OAIL3G,GACA,qCACC,sBAAMgE,UAAW0D,EAAaC,EAAGf,IACjC,sBACC5C,UAAW4D,EACXzD,MAAO,CAAE0D,OAAQ,QACjBF,EAAGf,OAIL3G,GACA,qCACC,sBAAM+D,UAAW0D,EAAaC,EAAGd,IACjC,sBAAM7C,UAAW4D,EAAcD,EAAGd,YAKtC,qBAAK7C,UAAW8D,EAAhB,SACEvE,EAAMI,SAASrC,OAAOwE,KAAI,SAACV,EAAOW,GAAR,OAC1B,cAACzC,EAAD,CAECK,SAAUJ,EAAMI,SAChBD,OAAQ0B,EACRxB,OAAQmC,GAHHX,EAAMnE,YAQf,wBACC+C,UAAW+D,EACXC,MAAM,aACNC,QAAS,WACRvH,EAAcD,QAAO,SAACD,GAAO,IAAD,QACrBS,EAAKC,cACLI,EAASd,EAAEY,aAAamC,EAAMI,SAAS1C,IAAIK,OAC3C4G,EAAY5G,EAAOA,EAAOqE,OAAS,GACzCrE,EAAO6G,KAAK,CACXlH,GAAIA,EACJI,KAAM,GACNE,IAAG,iBAAE2G,QAAF,IAAEA,OAAF,EAAEA,EAAW3G,WAAb,QAAoB,EACvBC,WAAU,iBAAE0G,QAAF,IAAEA,OAAF,EAAEA,EAAW1G,kBAAb,QAA2B,EACrCC,UAAS,iBAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAWzG,iBAAb,QAA0B,GACnCC,MAAK,iBAAEwG,QAAF,IAAEA,OAAF,EAAEA,EAAWxG,aAAb,QAAsB,OAG7B/B,EAAQc,QAAO,SAACD,GACfA,EAAEN,kBAAoBqD,EAAMI,SAAS1C,GACrCT,EAAEL,mBAAqBuF,MAnB1B,kBA6BH,IAAMoB,EAAarC,YAAI,yEAOjBsC,EAAmBtC,YAAI,yFAQvB6C,EAAyB7C,YAAI,CAClCE,SAAU,WACVP,IAAI,MACJgE,KAAM,EACNC,OAAO,MACPC,MAAO,GAL0B,OAQ5Bf,EAAkB9C,YAAI,CAC3BG,MAAM,OACNlC,OAAO,OACP6F,KAAM,eAHoB,OAMrBb,EAAcjD,YAAI,wFAMlBmD,EAAenD,YAAI,uFAMnBqD,EAAoBrD,YAAI,wFASxBuC,EAAYvC,YAAI,0FAQhB0C,EAAwB1C,YAAI,CACjC,YAAa,CACZ+D,QAAS,KACT7D,SAAU,WACV0D,OAAO,MACPD,KAAK,MACLxD,MAAM,MACNlC,OAAO,MACP7C,WAAY,QACZgF,OAAO,kBACPC,aAAa,MACb2D,QAAS,KAXsB,OAe3BpB,EAAoB5C,YAAI,CAC7B,YAAa,CACZ+D,QAAS,KACT7D,SAAU,WACV0D,OAAO,MACPD,KAAK,MACLxD,MAAM,MACNlC,OAAO,MACP7C,WAAY,QACZgF,OAAO,kBACPC,aAAa,QAVc,OAcvBiD,EAAetD,YAAI,iECrRlB,SAASiE,EAAanF,GAA2B,IAAD,EACf7C,EAAc8C,UAAS,SAAChD,GAAD,MAAQ,CACrEmB,aAAcnB,EAAEmB,aAChBP,aAAcZ,EAAEY,iBAFTO,EAD8C,EAC9CA,aAAcP,EADgC,EAChCA,aADgC,EASlDzB,EAAQ6D,UAAS,SAAChD,GAAD,MAAQ,CAC5BN,kBAAmBM,EAAEN,kBACrBC,mBAAoBK,EAAEL,mBACtBC,uBAAwBI,EAAEJ,2BAN1BF,EANqD,EAMrDA,kBACAC,EAPqD,EAOrDA,mBACAC,EARqD,EAQrDA,uBAMD,OACC,qBAAK4D,UAAW2E,EAAhB,SACEhH,EAAamE,KAAI,SAAC8C,EAAWC,GAAZ,OACjB,cAACpD,EAAD,CAEC9B,SAAUvC,EAAawH,GACvB3B,YAAa/G,IAAsB0I,EACnCxB,oBAAqBjH,EACrB+G,wBAAyB9G,GAJpBwI,QAWV,IAAMD,EAAclE,YAAI,aACvBqE,KAAM,OACNC,QAAS,OACTC,cAAe,SACf7D,SAAU,OACVP,MAAO,OACPlC,OAAQ,QANc,6BAQChD,EARD,KAQiB,CACtCoJ,KAAM,SATe,O,+BCnChB,SAASG,EAAmBC,GAAuC,IAAD,EAKpEvJ,EAAQwJ,cAHXjJ,EAFuE,EAEvEA,kBACAC,EAHuE,EAGvEA,mBACAC,EAJuE,EAIvEA,uBAEDM,EAAcD,QAAO,SAACD,GACrB,IAAM4I,EAAU5I,EAAEY,aAAalB,GAC/B,GAAKkJ,EAAL,CACA,IAAMjD,EAAKpD,KAAKE,IAAI9C,EAAoBC,GAClCgG,EAAKrD,KAAKC,IAAI7C,EAAoBC,GAClCiJ,EAAKD,EAAQ9H,OAAO6E,GACpBmD,EAAKF,EAAQ9H,OAAO8E,GAC1B,GAAKiD,GAAOC,EAQZ,IAf2B,MAavB3J,EAAQwJ,cAJXrJ,EAT0B,EAS1BA,QACAC,EAV0B,EAU1BA,eACAC,EAX0B,EAW1BA,cACAC,EAZ0B,EAY1BA,UAEKsJ,EAAQnD,EAAKD,EAAK,EACfqD,EAAI,EAAGA,GAAKD,EAAOC,IAAK,CAChC,IAAMC,EAAIP,EAAcM,GAAKD,EAAQ,IAC/BG,EAAIN,EAAQ9H,OAAO6E,EAAKqD,GAC1B1J,IACH4J,EAAEnI,IAAM8H,EAAG9H,KAAO+H,EAAG/H,IAAM8H,EAAG9H,KAAOkI,GAElC1J,IACH2J,EAAElI,WAAa6H,EAAG7H,YAAc8H,EAAG9H,WAAa6H,EAAG7H,YAAciI,GAE9DzJ,IACH0J,EAAEjI,UAAY4H,EAAG5H,WAAa6H,EAAG7H,UAAY4H,EAAG5H,WAAagI,GAE1DxJ,IACHyJ,EAAEhI,MAAQ2H,EAAG3H,OAAS4H,EAAG5H,MAAQ2H,EAAG3H,OAAS+H,QCnC1C,SAASE,EAAiBD,GAChC,OAAkB,IAAdA,EAAEhI,QACEgI,EAAEE,MAGRF,EAAEE,MACF7G,KAAK8G,MAAkB,IAAZH,EAAEhI,SACXoI,SAAS,IACTC,cACAC,SAAS,EAAG,KCTV,SAASC,EAA2BC,GAC1C,OAAQA,GACP,KAAKzK,EAAaa,IACjB,MAAO,MACR,KAAKb,EAAa0K,KACjB,MAAO,MACR,KAAK1K,EAAa2K,OACjB,MAAO,OACR,QACC,MAAM,IAAIC,MAAJ,yCAA4CH,KCT9C,SAASI,EAAsBJ,GACrC,OAAQA,GACP,KAAKzK,EAAaa,IACjB,MAAO,MACR,KAAKb,EAAa0K,KACjB,MAAO,OACR,KAAK1K,EAAa2K,OACjB,MAAO,SACR,QACC,MAAM,IAAIC,MAAJ,yCAA4CH,KCX9C,SAASK,EAAoBd,GACnC,OAAOA,ECED,SAASe,EAAUpF,GAAgD,IAAD,QACxE,OAAOqF,IAAaC,IACC,KAApB,iBAACtF,QAAD,IAACA,OAAD,EAACA,EAAO7D,WAAR,QAAe,GACY,KAA3B,iBAAC6D,QAAD,IAACA,OAAD,EAACA,EAAO5D,kBAAR,QAAsB,GACI,KAA1B,iBAAC4D,QAAD,IAACA,OAAD,EAACA,EAAO3D,iBAAR,QAAqB,IACpBC,MAJK,iBAIC0D,QAJD,IAICA,OAJD,EAICA,EAAO1D,aAJR,QAIiB,GCClB,SAASiJ,EAAY3I,GAC3B,IAAM4I,EAAkBC,kBAAgB,GADS,EAErBrH,mBAASxB,EAAE8I,cAAc9I,EAAEK,QAFN,mBAE1C0I,EAF0C,KAElCC,EAFkC,KAGzC3I,EAAyBL,EAAzBK,MAAOyI,EAAkB9I,EAAlB8I,cAMf,OALAG,qBAAU,WACJL,EAAgBM,SACpBF,EAAUF,EAAczI,MAEvB,CAACA,EAAOyI,IACJ,CACNzI,MAAO0I,EACPI,QAFM,SAEEjJ,GACP0I,EAAgBM,SAAU,EAC1B,IACChJ,EAAEK,cAAc6I,kBAAkB,EAAGlJ,EAAEK,cAAcF,MAAMsD,QAC1D,MAAOzD,MAEVmJ,OARM,SAQCnJ,GACN0I,EAAgBM,SAAU,EAC1BlJ,EAAEkB,SAASlB,EAAEsJ,gBAAgBpJ,EAAEK,cAAcF,SAE9CkJ,SAZM,SAYGrJ,GACR8I,EAAU9I,EAAEK,cAAcF,OAC1BL,EAAEkB,SAASlB,EAAEsJ,gBAAgBpJ,EAAEK,cAAcF,UChCzC,SAASmJ,GAAWC,GAC1B,MAAoB,kBAANA,KAAoBA,ECC5B,SAAS/E,KAAsB,IAAD,uBAAbgF,EAAa,yBAAbA,EAAa,gBACpC,OAAOA,EAAKC,OAAOH,IAAY9E,KAAK,ICD9B,SAASkF,GAAcC,GAC7B,OAAO,SAAC7F,GAAD,OAAgBA,EAAI2F,OAAOH,IAAY9E,KAAKmF,ICD7C,SAASC,GAASD,GACxB,OAAO,sCAAI7F,EAAJ,yBAAIA,EAAJ,uBAAmBA,EAAI2F,OAAOH,IAAY9E,KAAKmF,ICqBhD,SAASE,GAAYxI,GAA0B,IAAD,gBAC5BC,oBAAS,kBAAMtC,iBAAhC8K,EAD6C,sBAEHtL,EAAc8C,UAC9D,SAAChD,GAAD,MAAQ,CACPY,aAAcZ,EAAEY,aAChBO,aAAcnB,EAAEmB,aAChBC,SAAUpB,EAAEoB,aAJNR,EAF4C,EAE5CA,aAAcO,EAF8B,EAE9BA,aAAcC,EAFgB,EAEhBA,SAFgB,EAkBhDjC,EAAQ6D,UAAS,SAAChD,GAAD,MAAQ,CAC5BN,kBAAmBM,EAAEN,kBACrBC,mBAAoBK,EAAEL,mBACtBC,uBAAwBI,EAAEJ,uBAC1BC,aAAcG,EAAEH,aAChBJ,UAAWO,EAAEP,UACbH,QAASU,EAAEV,QACXE,cAAeQ,EAAER,cACjBD,eAAgBS,EAAET,mBAhBlBG,EAVmD,EAUnDA,kBACAC,EAXmD,EAWnDA,mBACAC,EAZmD,EAYnDA,uBACAC,EAbmD,EAanDA,aACAJ,EAdmD,EAcnDA,UACAH,EAfmD,EAenDA,QACAE,EAhBmD,EAgBnDA,cACAD,EAjBmD,EAiBnDA,eAWKqJ,EAAUhI,EAAalB,GACvBkF,EAAK,OAAGgE,QAAH,IAAGA,GAAH,UAAGA,EAAS9H,cAAZ,aAAG,EAAkBnB,GAC1B+H,EAAS,OAAGkB,QAAH,IAAGA,GAAH,UAAGA,EAAS9H,cAAZ,aAAG,EAAkBlB,GAC9B6L,EAAezB,EAAUpF,GACzB8G,EAAWvB,EAAS,CACzBtI,MAAK,iBAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAO7D,WAAT,QAAgB,EACrB2B,SAAU,SAAC3B,GACVb,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBoB,OAAOnB,GAAoBoB,IAAMA,MAGrE+J,gBAAiBa,GACjBrB,cAAesB,KAEVC,EAAkB1B,EAAS,CAChCtI,MAAK,iBAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAO5D,kBAAT,QAAuB,EAC5B0B,SAAU,SAAC1B,GACVd,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBoB,OACjCnB,GACCqB,WAAaA,MAGjB8J,gBAAiBgB,GACjBxB,cAAeyB,KAEVC,EAAiB7B,EAAS,CAC/BtI,MAAK,iBAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAO3D,iBAAT,QAAsB,EAC3ByB,SAAU,SAACzB,GACVf,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBoB,OACjCnB,GACCsB,UAAYA,MAGhB6J,gBAAiBgB,GACjBxB,cAAeyB,KAEVE,EAAa9B,EAAS,CAC3BtI,MAAK,iBAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAO1D,aAAT,QAAkB,EACvBwB,SAAU,SAACxB,GACVhB,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBoB,OACjCnB,GACCuB,MAAQA,MAGZ4J,gBAAiBgB,GACjBxB,cAAeyB,KAEVG,EAAW/B,EAAS,CACzBtI,MAAO4J,EAAaU,MACpBzJ,SAAU,SAACyJ,GACVC,GACCD,EACAV,EAAaY,QACbZ,EAAaa,OACbb,EAAavK,UAGf4J,gBAAiByB,GACjBjC,cAAekC,KAEVC,EAAatC,EAAS,CAC3BtI,MAAO4J,EAAaY,QACpB3J,SAAU,SAAC2J,GACVD,GACCX,EAAaU,MACbE,EACAZ,EAAaa,OACbb,EAAavK,UAGf4J,gBAAiByB,GACjBjC,cAAekC,KAEVE,EAAYvC,EAAS,CAC1BtI,MAAO4J,EAAaa,OACpB5J,SAAU,SAAC4J,GACVF,GACCX,EAAaU,MACbV,EAAaY,QACbC,EACAb,EAAavK,UAGf4J,gBAAiByB,GACjBjC,cAAekC,KAEVG,EAAWxC,EAAS,CACzBtI,MAAOsH,EAAiBsC,GACxB/I,SAAU,SAAC0G,GAAS,IAAD,EACZxE,EAAK,UAAGzE,eAAI,kBAAM8J,IAAab,aAA1B,QAAmCa,IAAa,SAC3DmC,GAAQxH,EAAMuH,MAAOvH,EAAMyH,QAASzH,EAAM0H,OAAQ1H,EAAM1D,UAEzD4J,gBAAiB8B,GACjBtC,cAAesC,KAEVC,EC7IA,SACNjM,EACAO,EACAtB,EACAuB,GAEA,OAAO0L,mBAAQ,WACd,OAAQjN,GACP,KAAKZ,EAAa0K,KACjB,OACC2B,GAAS,KAATA,CAAA,+BAEUlK,GAFV,IAICgK,GAAc,KAAdA,CACCjK,EAAamE,KAAI,SAAC8C,EAAWC,GAC5B,IAAMO,EAAUhI,EAAawH,GAC7B,OAAOgD,GAAc,KAAdA,CACNxC,EAAQ9H,OAAOwE,KAAI,SAACV,EAAOW,GAC1B,IAAMkG,EAAezB,EAAUpF,GAC/B,OAAOsB,GACNoF,GAAS,IAATA,CACC/I,KAAK8G,MAAMoC,EAAaU,OACtB7C,WACAE,SAAS,EAAG,KACdjH,KAAK8G,MAAMoC,EAAaY,SACtB/C,WACAE,SAAS,EAAG,KACdjH,KAAK8G,MAAMoC,EAAaa,QACtBhD,WACAE,SAAS,EAAG,MAEf,KACA5E,EAAM/D,MACLqF,GACC0C,EAAQ/H,MAAQqF,GAAK,UAAWmC,GAD7B,IAGH9C,aAOJ,KAEN,KAAKtG,EAAa2K,OACjB,OACC0B,GAAS,OAATA,CACCA,GAAS,KAATA,CAAA,eAA+BlK,GAC/BgK,GAAc,OAAdA,CACCjK,EAAamE,KAAI,SAAC8C,EAAWC,GAC5B,IAAMO,EAAUhI,EAAawH,GAC7B,OAAOgD,GAAc,OAAdA,CACNxC,EAAQ9H,OAAOwE,KAAI,SAACV,GACnB,IAAM6G,EAAezB,EAAUpF,GAC/B,OAAO0G,GAAS,KAATA,CACNG,EAAaU,MAAQ,IACrBV,EAAaY,QAAU,IACvBZ,EAAaa,OAAS,IACtBb,EAAavK,kBAMf,KAEN,KAAKjC,EAAaa,IACjB,OACCwL,GAAS,KAATA,CAAA,UAECF,GAAc,OAAdA,CACCjK,EAAamE,KAAI,SAAC8C,EAAWC,GAC5B,IAAMO,EAAUhI,EAAawH,GAC7B,OAAOgD,GAAc,KAAdA,CACNxC,EAAQ9H,OAAOwE,KAAI,SAACV,EAAOW,GAAR,OAClBW,GAAK,OAEJtB,EAAM/D,MACLqF,GACC0C,EAAQ/H,MAAQqF,GAAK,UAAWmC,GAD7B,IAGH9C,GANC,KASH4D,EAAiBa,EAAUpF,IATxB,aAPT,KAwBI,KAEN,QACC,MAAM,IAAIiF,MAAJ,yCAA4ChK,OAElD,CAACe,EAAcO,EAActB,EAAcuB,ID0C/B2L,CAAUnM,EAAcO,EAActB,EAAcuB,GAC7D4L,EAAaF,mBAAQ,WAC1B,IAAMG,EAAO,IAAIC,KAAK,CAACL,GAAS,CAAEM,KAAM,eACxC,OAAOC,IAAIC,gBAAgBJ,KACzB,CAACJ,IACJ,OACC,sBAAKrJ,UAAW8J,GAAhB,UACC,sBAAK9J,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,wBACA,uBACChK,UAAWiK,GACX5L,MAAK,OAAET,QAAF,IAAEA,IAAY,GACnBuJ,QAAS+C,GACT3C,SAAU,SAACrJ,GACVxB,EAAcD,QAAO,SAACD,GACrBA,EAAEoB,SAAWM,EAAEK,cAAcF,eAKjC,qBAAK2B,UAAW+J,GAAhB,SACGI,qBAAW1O,GAAiCqG,KAAI,SAACsI,GAAD,OACjD,kCACC,uBACCT,KAAK,QACLU,WAAYrC,EACZ3J,MAAO+L,EACPE,QAASjO,IAAiB+N,EAC1B7C,SAAU,SAACrJ,GACVvC,EAAQc,QAAO,SAACD,GACfA,EAAEH,aAAe6B,EAAEK,cAAcF,YAGjC,IACFiI,EAAsB8D,KAZZA,QAgBd,0BAAUpK,UAAWuK,GAAWC,UAAQ,EAACnM,MAAOgL,IAChD,sBAAKrJ,UAAWyK,GAAhB,UACC,wBACCxG,QAAS,WACRyG,UAAUC,UAAUC,UAAUvB,IAFhC,kBAOA,mBACCwB,KAAMrB,EACNsB,SAAQ,UAAKlN,EAAL,YAAiBqI,EAA2B5J,IAFrD,qBAOD,wBACC4H,QAAS,WACRtI,EAAQc,QAAO,SAACD,GACfA,EAAEX,YAAcW,EAAEX,eAHrB,wBASA,wBACCoI,QAAS,WACR,IAAI8G,EAAuB,GAC3BrO,EAAcD,QAAO,SAACD,GACrB,IAAMS,EAAM8N,EAAuB7N,cACnCV,EAAEY,aAAaH,GAAM,CACpBA,GAAIA,EACJI,KAAM,GACNC,OAAQ,CACP,CACCL,GAAIC,cACJG,KAAM,GACNE,IAAK,EACLC,WAAY,EACZC,UAAW,GACXC,MAAO,KAIVlB,EAAEmB,aAAawG,KAAKlH,MAErBtB,EAAQc,QAAO,SAACD,GACfA,EAAEN,kBAAoB6O,EACtBvO,EAAEL,mBAAqB,MAvB1B,yBA6BCiJ,GACA,qCACC,sBAAKpF,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,sBACA,uBACChK,UAAWiK,GACX5L,MAAK,iBAAE+G,QAAF,IAAEA,OAAF,EAAEA,EAAS/H,YAAX,QAAmB,GACxB8J,QAAS+C,GACT3C,SAAU,SAACrJ,GACVxB,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBmB,KAAOa,EAAEK,cAAcF,eAK7D,wBACC4F,QAAS,WACR,GAAIpH,OAAOmO,QAAP,mBAAmC,CACtC,IAAIjJ,GAAS,EACTgJ,EAAuB,GACvBE,GAAyB,EAC7BvO,EAAcD,QAAO,SAACD,GAGrB,UAFOA,EAAEY,aAAalB,IACtB6F,EAAQvF,EAAEmB,aAAauN,QAAQhP,KAClB,EAAG,CAAC,IAAD,QACfM,EAAEmB,aAAawN,OAAOpJ,EAAO,GAC7BgJ,EAAoB,oBACnBvO,EAAEmB,aAAaoE,EAAQ,UADJ,QACUvF,EAAEmB,aAAaoE,UADzB,QACmC,GACvD,IAAMzE,EAAM,oBACXd,EAAEY,aAAalB,UADJ,aACX,EAAmCoB,cADxB,QACkC,GAC9C2N,EAAwBlM,KAAKC,IAC5B,EACAD,KAAKE,IAAI3B,EAAOqE,OAAS,EAAGxF,QAI/BR,EAAQc,QAAO,SAACD,GACXuF,GAAS,IACZvF,EAAEN,kBAAoB6O,EACtBvO,EAAEL,mBAAqB8O,QAxB5B,+BAkCD7J,GACA,qCACC,sBAAKpB,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,oBACA,uBACChK,UAAWiK,GACX5L,OAAY,OAAL+C,QAAK,IAALA,OAAA,EAAAA,EAAO/D,OAAQlB,EACtBgL,QAAS+C,GACT3C,SAAU,SAACrJ,GACVxB,EAAcD,QAAO,SAACD,GACrBA,EAAEY,aAAalB,GAAmBoB,OACjCnB,GACCkB,KAAOa,EAAEK,cAAcF,eAK7B,sBAAK2B,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,mBACA,uBACChK,UAAWiK,GACX5L,MAAO6J,EAAS7J,MAChB8I,QAASe,EAASf,QAClBE,OAAQa,EAASb,OACjBE,SAAUW,EAASX,WAEpB,uBACCvH,UAAWiK,GACX5L,MAAOgK,EAAgBhK,MACvB8I,QAASkB,EAAgBlB,QACzBE,OAAQgB,EAAgBhB,OACxBE,SAAUc,EAAgBd,WAE3B,uBACCvH,UAAWiK,GACX5L,MAAOmK,EAAenK,MACtB8I,QAASqB,EAAerB,QACxBE,OAAQmB,EAAenB,OACvBE,SAAUiB,EAAejB,WAE1B,uBACCvH,UAAWiK,GACX5L,MAAOoK,EAAWpK,MAClB8I,QAASsB,EAAWtB,QACpBE,OAAQoB,EAAWpB,OACnBE,SAAUkB,EAAWlB,cAGvB,sBAAKvH,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,mBACA,uBACChK,UAAWiK,GACX5L,MAAOqK,EAASrK,MAChB8I,QAASuB,EAASvB,QAClBE,OAAQqB,EAASrB,OACjBE,SAAUmB,EAASnB,WAEpB,uBACCvH,UAAWiK,GACX5L,MAAO4K,EAAW5K,MAClB8I,QAAS8B,EAAW9B,QACpBE,OAAQ4B,EAAW5B,OACnBE,SAAU0B,EAAW1B,WAEtB,uBACCvH,UAAWiK,GACX5L,MAAO6K,EAAU7K,MACjB8I,QAAS+B,EAAU/B,QACnBE,OAAQ6B,EAAU7B,OAClBE,SAAU2B,EAAU3B,WAErB,uBACCvH,UAAWiK,GACX5L,MAAOoK,EAAWpK,MAClB8I,QAASsB,EAAWtB,QACpBE,OAAQoB,EAAWpB,OACnBE,SAAUkB,EAAWlB,cAGvB,sBAAKvH,UAAW+J,GAAhB,UACC,qBAAK/J,UAAWgK,GAAhB,kBACA,uBACChK,UAAWiK,GACX5L,MAAO8K,EAAS9K,MAChB8I,QAASgC,EAAShC,QAClBE,OAAQ8B,EAAS9B,OACjBE,SAAU4B,EAAS5B,cAGrB,wBACCtD,QAAS,WACR,IAAIgH,GAAyB,EAC7BvO,EAAcD,QAAO,SAACD,GACrB,IAAM4I,EAAU5I,EAAEY,aAAalB,GAC/BkJ,EAAQ9H,OAAO6N,OAAOhP,EAAoB,GAC1C8O,EAAwBlM,KAAKC,IAC5B,EACAD,KAAKE,IAAImG,EAAQ9H,OAAOqE,OAAS,EAAGxF,EAAqB,OAG3DR,EAAQc,QAAO,SAACD,GACfA,EAAEL,mBAAqB8O,MAZ1B,2BAkBA,sBAAKjL,UAAW+J,GAAhB,UACC,kCACC,uBACCJ,KAAK,WACLW,QAASxO,EACTyL,SAAU,SAACrJ,GACVvC,EAAQc,QAAO,SAACD,GACfA,EAAEV,QAAUoC,EAAEK,cAAc+L,cAI/B,uBAVD,SAYS,IACT,kCACC,uBACCX,KAAK,WACLW,QAASvO,EACTwL,SAAU,SAACrJ,GACVvC,EAAQc,QAAO,SAACD,GACfA,EAAET,eAAiBmC,EAAEK,cAAc+L,cAItC,uBAVD,gBAYS,IACT,kCACC,uBACCX,KAAK,WACLW,QAAStO,EACTuL,SAAU,SAACrJ,GACVvC,EAAQc,QAAO,SAACD,GACfA,EAAER,cAAgBkC,EAAEK,cAAc+L,cAIrC,uBAVD,eAYS,IACT,kCACC,uBACCX,KAAK,WACLW,QAASrO,EACTsL,SAAU,SAACrJ,GACVvC,EAAQc,QAAO,SAACD,GACfA,EAAEP,UAAYiC,EAAEK,cAAc+L,cAIjC,uBAVD,cAcApG,GACA,qCACC,wBACCD,QAAS,WACRgB,EAAmBsB,IAFrB,iCAOA,wBACCtC,QAAS,WACRgB,EE/cF,WAAuC,IAAVmG,EAAS,uDAAH,EACzC,OAAO,SAAC3F,GACP,OAAO1G,KAAKqM,IAAI3F,EAAG2F,IF6cOC,KAFrB,kCAOA,wBACCpH,QAAS,WACRgB,EGtdF,WAAwC,IAAVmG,EAAS,uDAAH,EAC1C,OAAO,SAAC3F,GACP,OAAO,EAAI1G,KAAKqM,IAAI,EAAI3F,EAAG2F,IHodDE,KAFrB,mCAOA,wBACCrH,QAAS,WACRgB,EI7dF,WAA0C,IAAVmG,EAAS,uDAAH,EAC5C,OAAO,SAAC3F,GACP,OAAKA,GAAK,GAAK,EAAU,GAAM1G,KAAKqM,IAAI3F,EAAG2F,GACpC,EAAI,GAAMrM,KAAKwM,IAAIxM,KAAKqM,IAAI,EAAI3F,EAAG2F,KJ0dhBI,KAFrB,+CAeP,IAAM1B,GAAarJ,YAAI,aACtBqE,KAAM,WACNC,QAAS,OACTC,cAAe,SACf7D,SAAU,OACVP,MAAO,OACP6K,IAAK,MACLrK,MAAO,OACPJ,SAAU,QARW,6BAUEtF,EAVF,KAUkB,CACtCgQ,SAAU,QACVhN,OAAQ,SAZY,OAgBhBqL,GAAkBtJ,YAAI,8HAYtBuJ,GAAWvJ,YAAI,8CAIfwJ,GAAWxJ,YAAI,sCAIf8J,GAAY9J,YAAI,+DAMhBgK,GAAehK,YAAI,yGAWnBkL,GAAS,IAAIC,KAAKC,aAAa,QAAS,CAAEC,aAAa,IAE7D,SAAS9C,GAAelL,GACvB,OAAOiO,MAAMjO,GAAK,GAAK6N,GAAOA,OAAO7N,GAGtC,SAASiL,GAAmBjL,GAC3B,IAAMO,EAAQ2N,WAAWlO,GACzB,OAAOiO,MAAM1N,GAAS,EAAIA,EAG3B,SAAS8J,GAAcrK,GACtB,IAAMO,EAAQ2N,WAAWlO,GACzB,OAAOiO,MAAM1N,GAAS,EAAIA,EAAQ,IAGnC,SAAS+J,GAAYtK,GACpB,OAAOkL,GAAmB,IAAJlL,GAGvB,SAASwK,GAAkBxK,GAC1B,IAAMO,EAAQ2N,WAAWlO,GACzB,OAAOiO,MAAM1N,GAAS,EAAIA,EAAQ,IAGnC,SAASkK,GAAgBzK,GACxB,OAAOkL,GAAmB,IAAJlL,GAGvB,SAAS8K,GAAQqD,EAAWC,EAAWC,EAAWC,GAAY,IAAD,EACVzQ,EAAQwJ,cAAlDhJ,EADoD,EACpDA,mBAAoBD,EADgC,EAChCA,kBACtBmQ,EAAW5F,IAAa6F,IAAIL,EAAGC,EAAGC,GAAGzO,MAAM0O,GACjD1P,EAAcD,QAAO,SAACD,GACrB,IAAM4E,EAAQ5E,EAAEY,aAAalB,GAAmBoB,OAAOnB,GACnDiF,IACHA,EAAM7D,IAAM8O,EAAS9O,MAAQ,IAC7B6D,EAAM5D,WAAa6O,EAASE,cAAgB,IAC5CnL,EAAM3D,UAAY4O,EAAS5O,YAAc,IACzC2D,EAAM1D,MAAQ2O,EAAS3O,YAK1B,SAAS0L,GAAYtL,GACpB,OAAOA,EAGR,SAASoM,GAAchM,GACtBA,EAAEK,cAAc6I,kBAAkB,EAAGlJ,EAAEK,cAAcF,MAAMsD,QKtkBrD,SAAS6K,GAAQjN,GACvB,IAAM1D,EAAaF,EAAQ6D,UAAS,SAAChD,GAAD,OAAOA,EAAEX,cAC7C,OACC,sBACCmE,UAAWyM,GACXtM,MAAO,CAAEtE,WAAYA,EAAa,QAAU,SAF7C,UAIC,cAAC6I,EAAD,IACA,cAACqD,GAAD,OAKH,IAAM0E,GAAShM,YAAI,aAClBsE,QAAS,OACTnE,MAAO,OACPlC,OAAQ,OACRsG,cAAe,SACf7D,SAAU,OACVtF,WAAY,QACZqF,QAAS,MACTuK,IAAK,OARY,6BASM/P,EATN,KASsB,CACtCsJ,cAAe,MACf9D,QAAS,OACTuK,IAAK,SAZW,OCVZiB,I,MAAcC,QACW,cAA7B9P,OAAOC,SAAS8P,UAEe,UAA7B/P,OAAOC,SAAS8P,UAEhB/P,OAAOC,SAAS8P,SAASC,MAAM,4DA0CnC,SAASC,GAAgBC,EAAeC,GACtCtC,UAAUuC,cACPC,SAASH,GACTI,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf/C,UAAUuC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC7FjEC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC3B,GAAD,MAED4B,SAASC,eAAe,SDelB,SAAkBrB,GACvB,GAA6C,kBAAmBtC,UAAW,CAGzE,GADkB,IAAId,IAAI0E,WAAwBzR,OAAOC,SAAS+N,MACpD0D,SAAW1R,OAAOC,SAASyR,OAIvC,OAGF1R,OAAOwC,iBAAiB,QAAQ,WAC9B,IAAM0N,EAAK,UAAMuB,WAAN,sBAEP5B,KAgEV,SAAiCK,EAAeC,GAE9CwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAACuB,GAEL,IAAMC,EAAcD,EAASD,QAAQ9R,IAAI,gBAEnB,MAApB+R,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYzD,QAAQ,cAG5CR,UAAUuC,cAAc4B,MAAM1B,MAAK,SAACC,GAClCA,EAAa0B,aAAa3B,MAAK,WAC7BtQ,OAAOC,SAASiS,eAKpBjC,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFVoB,CAAwBjC,EAAOC,GAI/BtC,UAAUuC,cAAc4B,MAAM1B,MAAK,WACjCQ,QAAQC,IACN,+GAMJd,GAAgBC,EAAOC,OCxC/BiC,K","file":"static/js/main.5d60b295.chunk.js","sourcesContent":["export enum OutputFormat {\n\tCss = 'Css',\n\tGimp = 'Gimp',\n\tSynfig = 'Synfig',\n}\n","export const BREAKPOINT = '1024px'\n","import { Store } from 'pullstate'\nimport { OutputFormat } from '../model/OutputFomat'\n\nexport interface IUiStore {\n\tbackground: boolean\n\tshowHue: boolean\n\tshowSaturation: boolean\n\tshowLightness: boolean\n\tshowAlpha: boolean\n\tselectedPaletteId: string\n\tselectedColorIndex: number\n\tlastSelectedColorIndex: number\n\toutputFormat: OutputFormat\n}\n\nexport const UiStore = new Store<IUiStore>({\n\tbackground: false,\n\tshowHue: true,\n\tshowSaturation: true,\n\tshowLightness: true,\n\tshowAlpha: true,\n\tselectedPaletteId: '',\n\tselectedColorIndex: 0,\n\tlastSelectedColorIndex: 0,\n\toutputFormat: OutputFormat.Css,\n})\n\nUiStore.subscribe(\n\t(s) => s.selectedColorIndex,\n\t(selectedColorIndex, s, lastSelectedColorIndex) => {\n\t\tUiStore.update((s) => {\n\t\t\ts.lastSelectedColorIndex = lastSelectedColorIndex\n\t\t})\n\t},\n)\n","import { get } from 'illa/FunctionUtil'\nimport { jsonFromUri, jsonToUri } from 'illa/JsonUtil'\nimport { withInterface } from 'illa/Type'\nimport { Store } from 'pullstate'\nimport { v4 } from 'uuid'\nimport { Color } from '../model/Color'\nimport { Palette } from '../model/Palette'\n\nexport interface IPalettesStore {\n\tpalettesById: Record<string, Palette>\n\tpaletteOrder: string[]\n\tfileName: string\n}\n\nexport const PalettesStore = new Store<IPalettesStore>(\n\tget(() => jsonFromUri(window.location.hash.slice(1))) ??\n\t\t(() => {\n\t\t\tconst id = v4()\n\t\t\treturn withInterface<IPalettesStore>({\n\t\t\t\tpalettesById: {\n\t\t\t\t\t[id]: withInterface<Palette>({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tname: '',\n\t\t\t\t\t\tcolors: [\n\t\t\t\t\t\t\twithInterface<Color>({\n\t\t\t\t\t\t\t\tid: v4(),\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\thue: 0,\n\t\t\t\t\t\t\t\tsaturation: 0.5,\n\t\t\t\t\t\t\t\tlightness: 0.5,\n\t\t\t\t\t\t\t\talpha: 1,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tpaletteOrder: [id],\n\t\t\t\tfileName: 'Palettes',\n\t\t\t})\n\t\t})(),\n)\n\nPalettesStore.subscribe(\n\t(s) => s,\n\t(s) => {\n\t\twindow.location.hash = '#' + jsonToUri(s)\n\t},\n)\n\nwindow.addEventListener('hashchange', (e) => {\n\tPalettesStore.update(() => jsonFromUri(window.location.hash.slice(1)))\n})\n","export function normalizeValue(v: number) {\n\tif (v === 0) return v\n\tv %= 1\n\tif (v < 0) v++\n\treturn v || 1\n}\n","export interface UseHandleParams {\n\tvalue: number\n\tsetValue(v: number): void\n\tclamp: boolean\n}\n\nexport function useHandle(o: UseHandleParams) {\n\treturn {\n\t\tonPointerDown(e: React.PointerEvent) {\n\t\t\tif (e.isPrimary) {\n\t\t\t\tconst dragStartValue = o.value\n\t\t\t\t// const dragStartY = e.currentTarget.getBoundingClientRect().y\n\t\t\t\tconst dragStartHeight =\n\t\t\t\t\te.currentTarget.parentElement!.getBoundingClientRect().height - 16\n\t\t\t\tconst dragStartPointerY = e.pageY\n\t\t\t\tconst onPointerMove = (e: PointerEvent) => {\n\t\t\t\t\tif (e.isPrimary) {\n\t\t\t\t\t\tlet value =\n\t\t\t\t\t\t\tdragStartValue - (e.pageY - dragStartPointerY) / dragStartHeight\n\t\t\t\t\t\tif (o.clamp) {\n\t\t\t\t\t\t\tvalue = Math.max(0, Math.min(1, value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\to.setValue(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst onPointerUp = (e: PointerEvent) => {\n\t\t\t\t\tif (e.isPrimary) {\n\t\t\t\t\t\twindow.removeEventListener('pointermove', onPointerMove)\n\t\t\t\t\t\twindow.removeEventListener('pointerup', onPointerUp)\n\t\t\t\t\t\twindow.removeEventListener('pointercancel', onPointerUp)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twindow.addEventListener('pointermove', onPointerMove)\n\t\t\t\twindow.addEventListener('pointerup', onPointerUp)\n\t\t\t\twindow.addEventListener('pointercancel', onPointerUp)\n\t\t\t}\n\t\t},\n\t}\n}\n","import { css, cx } from '@emotion/css/macro'\nimport React from 'react'\nimport { normalizeValue } from '../fun/normalizeValue'\nimport { useHandle } from '../hook/useHandle'\nimport { Color } from '../model/Color'\nimport { Palette } from '../model/Palette'\nimport { PalettesStore } from '../store/PalettesStore'\nimport { UiStore } from '../store/UiStore'\n\nexport interface HandlesCompProps {\n\t_palette: Palette\n\t_color: Color\n\t_index: number\n}\n\nexport function HandlesComp(props: HandlesCompProps) {\n\tconst {\n\t\tshowAlpha,\n\t\tshowHue,\n\t\tshowLightness,\n\t\tshowSaturation,\n\t} = UiStore.useState((s) => ({\n\t\tshowAlpha: s.showAlpha,\n\t\tshowHue: s.showHue,\n\t\tshowLightness: s.showLightness,\n\t\tshowSaturation: s.showSaturation,\n\t}))\n\tconst hueHandle = useHandle({\n\t\tvalue: props._color.hue,\n\t\tsetValue: (hue) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[props._palette.id].colors[props._index].hue = hue\n\t\t\t})\n\t\t},\n\t\tclamp: false,\n\t})\n\tconst saturationHandle = useHandle({\n\t\tvalue: props._color.saturation,\n\t\tsetValue: (saturation) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[props._palette.id].colors[\n\t\t\t\t\tprops._index\n\t\t\t\t].saturation = saturation\n\t\t\t})\n\t\t},\n\t\tclamp: true,\n\t})\n\tconst lightnessHandle = useHandle({\n\t\tvalue: props._color.lightness,\n\t\tsetValue: (lightness) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[props._palette.id].colors[\n\t\t\t\t\tprops._index\n\t\t\t\t].lightness = lightness\n\t\t\t})\n\t\t},\n\t\tclamp: true,\n\t})\n\tconst alphaHandle = useHandle({\n\t\tvalue: props._color.alpha,\n\t\tsetValue: (alpha) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[props._palette.id].colors[props._index].alpha = alpha\n\t\t\t})\n\t\t},\n\t\tclamp: true,\n\t})\n\treturn (\n\t\t<div\n\t\t\tclassName={handlesCss}\n\t\t\tonPointerUp={() => {\n\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\ts.selectedPaletteId = props._palette.id\n\t\t\t\t\ts.selectedColorIndex = props._index\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\t\t\t{showHue && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={hueCss}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: `calc(100% - 8px - (100% - 16px) * ${normalizeValue(\n\t\t\t\t\t\t\tprops._color.hue,\n\t\t\t\t\t\t)})`,\n\t\t\t\t\t}}\n\t\t\t\t\tonPointerDown={hueHandle.onPointerDown}\n\t\t\t\t>\n\t\t\t\t\tH\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{showSaturation && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={saturationCss}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: `calc(100% - 8px - (100% - 16px) * ${normalizeValue(\n\t\t\t\t\t\t\tprops._color.saturation,\n\t\t\t\t\t\t)})`,\n\t\t\t\t\t}}\n\t\t\t\t\tonPointerDown={saturationHandle.onPointerDown}\n\t\t\t\t>\n\t\t\t\t\tS\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{showLightness && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={lightnessCss}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: `calc(100% - 8px - (100% - 16px) * ${normalizeValue(\n\t\t\t\t\t\t\tprops._color.lightness,\n\t\t\t\t\t\t)})`,\n\t\t\t\t\t}}\n\t\t\t\t\tonPointerDown={lightnessHandle.onPointerDown}\n\t\t\t\t>\n\t\t\t\t\tL\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{showAlpha && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={alphaCss}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttop: `calc(100% - 8px - (100% - 16px) * ${normalizeValue(\n\t\t\t\t\t\t\tprops._color.alpha,\n\t\t\t\t\t\t)})`,\n\t\t\t\t\t}}\n\t\t\t\t\tonPointerDown={alphaHandle.onPointerDown}\n\t\t\t\t>\n\t\t\t\t\tA\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst handlesCss = css({\n\tflex: 1,\n\toverflow: 'hidden',\n\twidth: '100%',\n\theight: '100%',\n\tposition: 'relative',\n})\n\nconst controlCss = css({\n\tposition: 'absolute',\n\ttop: 0,\n\twidth: '16px',\n\theight: '16px',\n\tborder: `1px solid white`,\n\tborderRadius: `8px`,\n\ttextAlign: 'center',\n\tfontSize: '8px',\n\tlineHeight: '8px',\n\tpadding: '3px 0',\n\toverflow: 'hidden',\n\tcolor: 'white',\n\ttransform: `translate(-8px, -8px)`,\n\tuserSelect: 'none',\n\tcursor: 'pointer',\n})\n\nconst hueCss = cx(\n\tcontrolCss,\n\tcss({\n\t\tleft: '20%',\n\t\tbackground: 'red',\n\t}),\n)\n\nconst saturationCss = cx(\n\tcontrolCss,\n\tcss({\n\t\tleft: '40%',\n\t\tbackground: 'green',\n\t}),\n)\n\nconst lightnessCss = cx(\n\tcontrolCss,\n\tcss({\n\t\tleft: '60%',\n\t\tbackground: 'blue',\n\t}),\n)\n\nconst alphaCss = cx(\n\tcontrolCss,\n\tcss({\n\t\tleft: '80%',\n\t\tbackground: 'black',\n\t}),\n)\n","import { css, cx } from '@emotion/css/macro'\nimport React from 'react'\nimport { v4 } from 'uuid'\nimport { normalizeValue } from '../fun/normalizeValue'\nimport { Palette } from '../model/Palette'\nimport { PalettesStore } from '../store/PalettesStore'\nimport { UiStore } from '../store/UiStore'\nimport { HandlesComp } from './HandlesComp'\n\nexport interface PaletteCompProps {\n\t_palette: Palette\n\t_isSelected: boolean\n\t_selectedColorIndex: number\n\t_lastSelectedColorIndex: number\n}\n\nexport function PaletteComp(props: PaletteCompProps) {\n\tconst count = props._palette.colors.length\n\tconst percentSize = 100 / count\n\tfunction popOut(\n\t\tv1: number,\n\t\tv2: number,\n\t\ti1: number,\n\t\ti2: number,\n\t\toffset: number,\n\t) {\n\t\tif (v1 != null && v2 != null) {\n\t\t\tconst diff = (v2 - v1) * 100\n\t\t\tif (\n\t\t\t\t(v1 < 0\n\t\t\t\t\t? v2 >= 0 || Math.ceil(v2) > Math.ceil(v1)\n\t\t\t\t\t: Math.floor(v2) > Math.floor(v1)) ||\n\t\t\t\t(v1 >= 0\n\t\t\t\t\t? v2 < 0 || Math.floor(v2) < Math.floor(v1)\n\t\t\t\t\t: Math.ceil(v2) < Math.ceil(v1))\n\t\t\t) {\n\t\t\t\treturn `L ${(i2 + offset) * percentSize} ${\n\t\t\t\t\t100 - (normalizeValue(v1) * 100 + diff)\n\t\t\t\t} M ${(i1 + offset) * percentSize} ${\n\t\t\t\t\t100 - (normalizeValue(v2) * 100 - diff)\n\t\t\t\t}`\n\t\t\t}\n\t\t}\n\t\treturn ''\n\t}\n\tconst hueD = props._palette.colors\n\t\t.map(\n\t\t\t(color, index, arr) =>\n\t\t\t\tpopOut(arr[index - 1]?.hue, color.hue, index - 1, index, 0.2) +\n\t\t\t\t(index === 0 ? 'M ' : 'L ') +\n\t\t\t\t(percentSize * index + percentSize * 0.2) +\n\t\t\t\t' ' +\n\t\t\t\t(100 - normalizeValue(color.hue) * 100),\n\t\t)\n\t\t.join(' ')\n\tconst saturationD = props._palette.colors\n\t\t.map(\n\t\t\t(color, index, arr) =>\n\t\t\t\t(index === 0 ? 'M ' : 'L ') +\n\t\t\t\t(percentSize * index + percentSize * 0.4) +\n\t\t\t\t' ' +\n\t\t\t\t(100 - normalizeValue(color.saturation) * 100),\n\t\t)\n\t\t.join(' ')\n\tconst lightnessD = props._palette.colors\n\t\t.map(\n\t\t\t(color, index, arr) =>\n\t\t\t\t(index === 0 ? 'M ' : 'L ') +\n\t\t\t\t(percentSize * index + percentSize * 0.6) +\n\t\t\t\t' ' +\n\t\t\t\t(100 - normalizeValue(color.lightness) * 100),\n\t\t)\n\t\t.join(' ')\n\tconst alphaD = props._palette.colors\n\t\t.map(\n\t\t\t(color, index, arr) =>\n\t\t\t\t(index === 0 ? 'M ' : 'L ') +\n\t\t\t\t(percentSize * index + percentSize * 0.8) +\n\t\t\t\t' ' +\n\t\t\t\t(100 - normalizeValue(color.alpha) * 100),\n\t\t)\n\t\t.join(' ')\n\tconst {\n\t\tshowAlpha,\n\t\tshowHue,\n\t\tshowLightness,\n\t\tshowSaturation,\n\t} = UiStore.useState((s) => ({\n\t\tshowAlpha: s.showAlpha,\n\t\tshowHue: s.showHue,\n\t\tshowLightness: s.showLightness,\n\t\tshowSaturation: s.showSaturation,\n\t}))\n\treturn (\n\t\t<div className={paletteCss}>\n\t\t\t<div className={paletteColorsCss}>\n\t\t\t\t{props._palette.colors.map((color, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={color.id}\n\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\tswatchCss,\n\t\t\t\t\t\t\tprops._isSelected &&\n\t\t\t\t\t\t\t\tprops._lastSelectedColorIndex === index &&\n\t\t\t\t\t\t\t\tswatchLastSelectedCss,\n\t\t\t\t\t\t\tprops._isSelected &&\n\t\t\t\t\t\t\t\tprops._selectedColorIndex === index &&\n\t\t\t\t\t\t\t\tswatchSelectedCss,\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground: `hsla(${color.hue}turn, ${color.saturation * 100}%, ${\n\t\t\t\t\t\t\t\tcolor.lightness * 100\n\t\t\t\t\t\t\t}%, ${color.alpha * 100}%)`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t\t<div className={paletteLinesWrapperCss}>\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclassName={paletteLinesCss}\n\t\t\t\t\t\tviewBox={`0 0 100 100`}\n\t\t\t\t\t\tpreserveAspectRatio='none'\n\t\t\t\t\t>\n\t\t\t\t\t\t{showHue && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<path className={backLineCss} d={hueD} />\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName={frontLineCss}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: 'red' }}\n\t\t\t\t\t\t\t\t\td={hueD}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showSaturation && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<path className={backLineCss} d={saturationD} />\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName={frontLineCss}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: 'green' }}\n\t\t\t\t\t\t\t\t\td={saturationD}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showLightness && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<path className={backLineCss} d={lightnessD} />\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tclassName={frontLineCss}\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: 'blue' }}\n\t\t\t\t\t\t\t\t\td={lightnessD}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showAlpha && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<path className={backLineCss} d={alphaD} />\n\t\t\t\t\t\t\t\t<path className={frontLineCss} d={alphaD} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<div className={paletteHandlesCss}>\n\t\t\t\t\t{props._palette.colors.map((color, index) => (\n\t\t\t\t\t\t<HandlesComp\n\t\t\t\t\t\t\tkey={color.id}\n\t\t\t\t\t\t\t_palette={props._palette}\n\t\t\t\t\t\t\t_color={color}\n\t\t\t\t\t\t\t_index={index}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclassName={addButtonCss}\n\t\t\t\ttitle='Add Swatch'\n\t\t\t\tonClick={() => {\n\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\tconst id = v4()\n\t\t\t\t\t\tconst colors = s.palettesById[props._palette.id].colors\n\t\t\t\t\t\tconst lastColor = colors[colors.length - 1]\n\t\t\t\t\t\tcolors.push({\n\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\thue: lastColor?.hue ?? 0,\n\t\t\t\t\t\t\tsaturation: lastColor?.saturation ?? 0,\n\t\t\t\t\t\t\tlightness: lastColor?.lightness ?? 0.5,\n\t\t\t\t\t\t\talpha: lastColor?.alpha ?? 1,\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\ts.selectedPaletteId = props._palette.id\n\t\t\t\t\t\ts.selectedColorIndex = count\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t+\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nconst paletteCss = css({\n\tflex: 'auto',\n\tdisplay: 'flex',\n\twidth: '100%',\n\theight: '100%',\n})\n\nconst paletteColorsCss = css({\n\tflex: 'auto',\n\tdisplay: 'flex',\n\twidth: '100%',\n\theight: '100%',\n\tposition: 'relative',\n})\n\nconst paletteLinesWrapperCss = css({\n\tposition: 'absolute',\n\ttop: `8px`,\n\tleft: 0,\n\tbottom: `8px`,\n\tright: 0,\n})\n\nconst paletteLinesCss = css({\n\twidth: `100%`,\n\theight: `100%`,\n\tfill: 'transparent',\n})\n\nconst backLineCss = css({\n\tstroke: 'white',\n\tstrokeWidth: 3,\n\tvectorEffect: 'non-scaling-stroke',\n})\n\nconst frontLineCss = css({\n\tstroke: 'black',\n\tstrokeWidth: 1,\n\tvectorEffect: 'non-scaling-stroke',\n})\n\nconst paletteHandlesCss = css({\n\tposition: 'absolute',\n\ttop: 0,\n\tbottom: 0,\n\tleft: 0,\n\tright: 0,\n\tdisplay: 'flex',\n})\n\nconst swatchCss = css({\n\tflex: 1,\n\toverflow: 'hidden',\n\twidth: '100%',\n\theight: '100%',\n\tposition: 'relative',\n})\n\nconst swatchLastSelectedCss = css({\n\t'&::before': {\n\t\tcontent: '\"\"',\n\t\tposition: 'absolute',\n\t\tbottom: `6px`,\n\t\tleft: `6px`,\n\t\twidth: `4px`,\n\t\theight: `4px`,\n\t\tbackground: 'white',\n\t\tborder: `1px solid black`,\n\t\tborderRadius: `2px`,\n\t\topacity: 0.4,\n\t},\n})\n\nconst swatchSelectedCss = css({\n\t'&::before': {\n\t\tcontent: '\"\"',\n\t\tposition: 'absolute',\n\t\tbottom: `4px`,\n\t\tleft: `4px`,\n\t\twidth: `8px`,\n\t\theight: `8px`,\n\t\tbackground: 'white',\n\t\tborder: `1px solid black`,\n\t\tborderRadius: `4px`,\n\t},\n})\n\nconst addButtonCss = css({\n\tflex: 'none',\n\toverflow: 'hidden',\n\theight: '100%',\n})\n","import { css } from '@emotion/css/macro'\nimport React from 'react'\nimport { BREAKPOINT } from '../model/constants'\nimport { PalettesStore } from '../store/PalettesStore'\nimport { UiStore } from '../store/UiStore'\nimport { PaletteComp } from './PaletteComp'\n\nexport interface PalettesCompProps {}\n\nexport function PalettesComp(props: PalettesCompProps) {\n\tconst { paletteOrder, palettesById } = PalettesStore.useState((s) => ({\n\t\tpaletteOrder: s.paletteOrder,\n\t\tpalettesById: s.palettesById,\n\t}))\n\tconst {\n\t\tselectedPaletteId,\n\t\tselectedColorIndex,\n\t\tlastSelectedColorIndex,\n\t} = UiStore.useState((s) => ({\n\t\tselectedPaletteId: s.selectedPaletteId,\n\t\tselectedColorIndex: s.selectedColorIndex,\n\t\tlastSelectedColorIndex: s.lastSelectedColorIndex,\n\t}))\n\treturn (\n\t\t<div className={palettesCss}>\n\t\t\t{paletteOrder.map((paletteId, paletteIndex) => (\n\t\t\t\t<PaletteComp\n\t\t\t\t\tkey={paletteId}\n\t\t\t\t\t_palette={palettesById[paletteId]}\n\t\t\t\t\t_isSelected={selectedPaletteId === paletteId}\n\t\t\t\t\t_selectedColorIndex={selectedColorIndex}\n\t\t\t\t\t_lastSelectedColorIndex={lastSelectedColorIndex}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst palettesCss = css({\n\tflex: 'none',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\toverflow: 'auto',\n\twidth: '100%',\n\theight: '100%',\n\n\t[`@media (min-width: ${BREAKPOINT})`]: {\n\t\tflex: 'auto',\n\t},\n})\n","import { PalettesStore } from '../store/PalettesStore'\nimport { UiStore } from '../store/UiStore'\n\nexport function applyInterpolation(interpolation: (t: number) => number) {\n\tconst {\n\t\tselectedPaletteId,\n\t\tselectedColorIndex,\n\t\tlastSelectedColorIndex,\n\t} = UiStore.getRawState()\n\tPalettesStore.update((s) => {\n\t\tconst palette = s.palettesById[selectedPaletteId]\n\t\tif (!palette) return\n\t\tconst i1 = Math.min(selectedColorIndex, lastSelectedColorIndex)\n\t\tconst i2 = Math.max(selectedColorIndex, lastSelectedColorIndex)\n\t\tconst c1 = palette.colors[i1]\n\t\tconst c2 = palette.colors[i2]\n\t\tif (!c1 || !c2) return\n\t\tconst {\n\t\t\tshowHue,\n\t\t\tshowSaturation,\n\t\t\tshowLightness,\n\t\t\tshowAlpha,\n\t\t} = UiStore.getRawState()\n\t\tconst steps = i2 - i1 - 1\n\t\tfor (let i = 1; i <= steps; i++) {\n\t\t\tconst t = interpolation(i / (steps + 1))\n\t\t\tconst c = palette.colors[i1 + i]\n\t\t\tif (showHue) {\n\t\t\t\tc.hue = c1.hue + (c2.hue - c1.hue) * t\n\t\t\t}\n\t\t\tif (showSaturation) {\n\t\t\t\tc.saturation = c1.saturation + (c2.saturation - c1.saturation) * t\n\t\t\t}\n\t\t\tif (showLightness) {\n\t\t\t\tc.lightness = c1.lightness + (c2.lightness - c1.lightness) * t\n\t\t\t}\n\t\t\tif (showAlpha) {\n\t\t\t\tc.alpha = c1.alpha + (c2.alpha - c1.alpha) * t\n\t\t\t}\n\t\t}\n\t})\n}\n","import Color from 'color'\n\nexport function colorToHexString(c: Color) {\n\tif (c.alpha() === 1) {\n\t\treturn c.hex()\n\t} else {\n\t\treturn (\n\t\t\tc.hex() +\n\t\t\tMath.round(c.alpha() * 255)\n\t\t\t\t.toString(16)\n\t\t\t\t.toUpperCase()\n\t\t\t\t.padStart(2, '0')\n\t\t)\n\t}\n}\n","import { OutputFormat } from '../model/OutputFomat'\n\nexport function getExtensionByOutputFormat(f: OutputFormat) {\n\tswitch (f) {\n\t\tcase OutputFormat.Css:\n\t\t\treturn 'css'\n\t\tcase OutputFormat.Gimp:\n\t\t\treturn 'gpl'\n\t\tcase OutputFormat.Synfig:\n\t\t\treturn 'spal'\n\t\tdefault:\n\t\t\tthrow new Error(`[qjqy53] Unknown OutputFormat: ${f}`)\n\t}\n}\n","import { OutputFormat } from '../model/OutputFomat'\n\nexport function getNameByOutputFormat(f: OutputFormat) {\n\tswitch (f) {\n\t\tcase OutputFormat.Css:\n\t\t\treturn 'CSS'\n\t\tcase OutputFormat.Gimp:\n\t\t\treturn 'Gimp'\n\t\tcase OutputFormat.Synfig:\n\t\t\treturn 'Synfig'\n\t\tdefault:\n\t\t\tthrow new Error(`[qjqy86] Unknown OutputFormat: ${f}`)\n\t}\n}\n","export function linearInterpolation(t: number) {\n\treturn t\n}\n","import WrappedColor from 'color'\nimport { Color } from '../model/Color'\n\nexport function wrapColor(color: Color | null | undefined): WrappedColor {\n\treturn WrappedColor.hsl(\n\t\t(color?.hue ?? 0) * 360,\n\t\t(color?.saturation ?? 0) * 100,\n\t\t(color?.lightness ?? 0) * 100,\n\t).alpha(color?.alpha ?? 0)\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport interface UseInputParams<T> {\n\tvalue: T\n\tsetValue(v: T): void\n\tvalueFromString(v: string): T\n\tvalueToString(v: T): string\n}\n\nexport function useInput<T>(o: UseInputParams<T>) {\n\tconst inputFocusedRef = useRef<boolean>(false)\n\tconst [$value, set$value] = useState(o.valueToString(o.value))\n\tconst { value, valueToString } = o\n\tuseEffect(() => {\n\t\tif (!inputFocusedRef.current) {\n\t\t\tset$value(valueToString(value))\n\t\t}\n\t}, [value, valueToString])\n\treturn {\n\t\tvalue: $value,\n\t\tonFocus(e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) {\n\t\t\tinputFocusedRef.current = true\n\t\t\ttry {\n\t\t\t\te.currentTarget.setSelectionRange(0, e.currentTarget.value.length)\n\t\t\t} catch (e) {}\n\t\t},\n\t\tonBlur(e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) {\n\t\t\tinputFocusedRef.current = false\n\t\t\to.setValue(o.valueFromString(e.currentTarget.value))\n\t\t},\n\t\tonChange(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n\t\t\tset$value(e.currentTarget.value)\n\t\t\to.setValue(o.valueFromString(e.currentTarget.value))\n\t\t},\n\t}\n}\n","export function joinFilter(n: any) {\n\treturn typeof n === 'number' || !!n\n}\n","import { joinFilter } from './joinFilter'\n\nexport function join(...rest: any[]) {\n\treturn rest.filter(joinFilter).join('')\n}\n","import { joinFilter } from './joinFilter'\n\nexport function joinArrayWith(joiner: string) {\n\treturn (arr: any[]) => arr.filter(joinFilter).join(joiner)\n}\n","import { joinFilter } from './joinFilter'\n\nexport function joinWith(joiner: string) {\n\treturn (...arr: any[]) => arr.filter(joinFilter).join(joiner)\n}\n","import { css } from '@emotion/css/macro'\nimport WrappedColor from 'color'\nimport { enumValues } from 'illa/EnumUtil'\nimport { get } from 'illa/FunctionUtil'\nimport React, { useMemo, useState } from 'react'\nimport { v4 } from 'uuid'\nimport { applyInterpolation } from '../fun/applyInterpolation'\nimport { colorToHexString } from '../fun/colorToHexString'\nimport { easeInInterpolation } from '../fun/easeInInterpolation'\nimport { easeInOutInterpolation } from '../fun/easeInOutInterpolation'\nimport { easeOutInterpolation } from '../fun/easeOutInterpolation'\nimport { getExtensionByOutputFormat } from '../fun/getExtensionByOutputFormat'\nimport { getNameByOutputFormat } from '../fun/getNameByOutputFormat'\nimport { linearInterpolation } from '../fun/linearInterpolation'\nimport { wrapColor } from '../fun/wrapColor'\nimport { useInput } from '../hook/useInput'\nimport { useOutput } from '../hook/useOutput'\nimport { BREAKPOINT } from '../model/constants'\nimport { OutputFormat } from '../model/OutputFomat'\nimport { PalettesStore } from '../store/PalettesStore'\nimport { UiStore } from '../store/UiStore'\n\nexport interface ToolbarCompProps {}\n\nexport function ToolbarComp(props: ToolbarCompProps) {\n\tconst [$radioGroupId] = useState(() => v4())\n\tconst { palettesById, paletteOrder, fileName } = PalettesStore.useState(\n\t\t(s) => ({\n\t\t\tpalettesById: s.palettesById,\n\t\t\tpaletteOrder: s.paletteOrder,\n\t\t\tfileName: s.fileName,\n\t\t}),\n\t)\n\tconst {\n\t\tselectedPaletteId,\n\t\tselectedColorIndex,\n\t\tlastSelectedColorIndex,\n\t\toutputFormat,\n\t\tshowAlpha,\n\t\tshowHue,\n\t\tshowLightness,\n\t\tshowSaturation,\n\t} = UiStore.useState((s) => ({\n\t\tselectedPaletteId: s.selectedPaletteId,\n\t\tselectedColorIndex: s.selectedColorIndex,\n\t\tlastSelectedColorIndex: s.lastSelectedColorIndex,\n\t\toutputFormat: s.outputFormat,\n\t\tshowAlpha: s.showAlpha,\n\t\tshowHue: s.showHue,\n\t\tshowLightness: s.showLightness,\n\t\tshowSaturation: s.showSaturation,\n\t}))\n\tconst palette = palettesById[selectedPaletteId]\n\tconst color = palette?.colors?.[selectedColorIndex]\n\tconst lastColor = palette?.colors?.[lastSelectedColorIndex]\n\tconst wrappedColor = wrapColor(color)\n\tconst hueInput = useInput({\n\t\tvalue: color?.hue ?? 0,\n\t\tsetValue: (hue) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[selectedPaletteId].colors[selectedColorIndex].hue = hue\n\t\t\t})\n\t\t},\n\t\tvalueFromString: hueFromString,\n\t\tvalueToString: hueToString,\n\t})\n\tconst saturationInput = useInput({\n\t\tvalue: color?.saturation ?? 0,\n\t\tsetValue: (saturation) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[selectedPaletteId].colors[\n\t\t\t\t\tselectedColorIndex\n\t\t\t\t].saturation = saturation\n\t\t\t})\n\t\t},\n\t\tvalueFromString: percentFromString,\n\t\tvalueToString: percentToString,\n\t})\n\tconst lightnessInput = useInput({\n\t\tvalue: color?.lightness ?? 0,\n\t\tsetValue: (lightness) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[selectedPaletteId].colors[\n\t\t\t\t\tselectedColorIndex\n\t\t\t\t].lightness = lightness\n\t\t\t})\n\t\t},\n\t\tvalueFromString: percentFromString,\n\t\tvalueToString: percentToString,\n\t})\n\tconst alphaInput = useInput({\n\t\tvalue: color?.alpha ?? 0,\n\t\tsetValue: (alpha) => {\n\t\t\tPalettesStore.update((s) => {\n\t\t\t\ts.palettesById[selectedPaletteId].colors[\n\t\t\t\t\tselectedColorIndex\n\t\t\t\t].alpha = alpha\n\t\t\t})\n\t\t},\n\t\tvalueFromString: percentFromString,\n\t\tvalueToString: percentToString,\n\t})\n\tconst redInput = useInput({\n\t\tvalue: wrappedColor.red(),\n\t\tsetValue: (red) => {\n\t\t\tsetRGBA(\n\t\t\t\tred,\n\t\t\t\twrappedColor.green(),\n\t\t\t\twrappedColor.blue(),\n\t\t\t\twrappedColor.alpha(),\n\t\t\t)\n\t\t},\n\t\tvalueFromString: rgbValueFromString,\n\t\tvalueToString: numberToString,\n\t})\n\tconst greenInput = useInput({\n\t\tvalue: wrappedColor.green(),\n\t\tsetValue: (green) => {\n\t\t\tsetRGBA(\n\t\t\t\twrappedColor.red(),\n\t\t\t\tgreen,\n\t\t\t\twrappedColor.blue(),\n\t\t\t\twrappedColor.alpha(),\n\t\t\t)\n\t\t},\n\t\tvalueFromString: rgbValueFromString,\n\t\tvalueToString: numberToString,\n\t})\n\tconst blueInput = useInput({\n\t\tvalue: wrappedColor.blue(),\n\t\tsetValue: (blue) => {\n\t\t\tsetRGBA(\n\t\t\t\twrappedColor.red(),\n\t\t\t\twrappedColor.green(),\n\t\t\t\tblue,\n\t\t\t\twrappedColor.alpha(),\n\t\t\t)\n\t\t},\n\t\tvalueFromString: rgbValueFromString,\n\t\tvalueToString: numberToString,\n\t})\n\tconst hexInput = useInput({\n\t\tvalue: colorToHexString(wrappedColor),\n\t\tsetValue: (hex) => {\n\t\t\tconst color = get(() => WrappedColor(hex)) ?? WrappedColor('black')\n\t\t\tsetRGBA(color.red(), color.green(), color.blue(), color.alpha())\n\t\t},\n\t\tvalueFromString: identity,\n\t\tvalueToString: identity,\n\t})\n\tconst output = useOutput(palettesById, paletteOrder, outputFormat, fileName)\n\tconst outputHref = useMemo(() => {\n\t\tconst file = new Blob([output], { type: 'text/plain' })\n\t\treturn URL.createObjectURL(file)\n\t}, [output])\n\treturn (\n\t\t<div className={toolbarCss}>\n\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t<div className={labelCss}>File name:</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\tvalue={fileName ?? ''}\n\t\t\t\t\tonFocus={onFocusSelect}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\t\ts.fileName = e.currentTarget.value\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t{(enumValues(OutputFormat) as OutputFormat[]).map((anOutputFormat) => (\n\t\t\t\t\t<label key={anOutputFormat}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tradioGroup={$radioGroupId}\n\t\t\t\t\t\t\tvalue={anOutputFormat}\n\t\t\t\t\t\t\tchecked={outputFormat === anOutputFormat}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\ts.outputFormat = e.currentTarget.value as OutputFormat\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t{getNameByOutputFormat(anOutputFormat)}\n\t\t\t\t\t</label>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<textarea className={outputCss} disabled value={output} />\n\t\t\t<div className={buttonRowCss}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tnavigator.clipboard.writeText(output)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCopy\n\t\t\t\t</button>\n\t\t\t\t<a\n\t\t\t\t\thref={outputHref}\n\t\t\t\t\tdownload={`${fileName}.${getExtensionByOutputFormat(outputFormat)}`}\n\t\t\t\t>\n\t\t\t\t\tSave\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\ts.background = !s.background\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tBackground\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tlet newSelectedPaletteId = ''\n\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\tconst id = (newSelectedPaletteId = v4())\n\t\t\t\t\t\ts.palettesById[id] = {\n\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tcolors: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: v4(),\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\thue: 0,\n\t\t\t\t\t\t\t\t\tsaturation: 0,\n\t\t\t\t\t\t\t\t\tlightness: 0.5,\n\t\t\t\t\t\t\t\t\talpha: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts.paletteOrder.push(id)\n\t\t\t\t\t})\n\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\ts.selectedPaletteId = newSelectedPaletteId\n\t\t\t\t\t\ts.selectedColorIndex = 0\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tNew Palette\n\t\t\t</button>\n\t\t\t{palette && (\n\t\t\t\t<>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<div className={labelCss}>Palette:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={palette?.name ?? ''}\n\t\t\t\t\t\t\tonFocus={onFocusSelect}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\t\t\t\ts.palettesById[selectedPaletteId].name = e.currentTarget.value\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (window.confirm(`Delete palette?`)) {\n\t\t\t\t\t\t\t\tlet index = -1\n\t\t\t\t\t\t\t\tlet newSelectedPaletteId = ''\n\t\t\t\t\t\t\t\tlet newSelectedColorIndex = -1\n\t\t\t\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\t\t\t\tdelete s.palettesById[selectedPaletteId]\n\t\t\t\t\t\t\t\t\tindex = s.paletteOrder.indexOf(selectedPaletteId)\n\t\t\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\t\t\ts.paletteOrder.splice(index, 1)\n\t\t\t\t\t\t\t\t\t\tnewSelectedPaletteId =\n\t\t\t\t\t\t\t\t\t\t\ts.paletteOrder[index - 1] ?? s.paletteOrder[index] ?? ''\n\t\t\t\t\t\t\t\t\t\tconst colors =\n\t\t\t\t\t\t\t\t\t\t\ts.palettesById[selectedPaletteId]?.colors ?? []\n\t\t\t\t\t\t\t\t\t\tnewSelectedColorIndex = Math.max(\n\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\tMath.min(colors.length - 1, selectedColorIndex),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\t\t\t\ts.selectedPaletteId = newSelectedPaletteId\n\t\t\t\t\t\t\t\t\t\ts.selectedColorIndex = newSelectedColorIndex\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Palette\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{color && (\n\t\t\t\t<>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<div className={labelCss}>Color:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={color?.name || selectedColorIndex}\n\t\t\t\t\t\t\tonFocus={onFocusSelect}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\t\t\t\ts.palettesById[selectedPaletteId].colors[\n\t\t\t\t\t\t\t\t\t\tselectedColorIndex\n\t\t\t\t\t\t\t\t\t].name = e.currentTarget.value\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<div className={labelCss}>HSLA:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={hueInput.value}\n\t\t\t\t\t\t\tonFocus={hueInput.onFocus}\n\t\t\t\t\t\t\tonBlur={hueInput.onBlur}\n\t\t\t\t\t\t\tonChange={hueInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={saturationInput.value}\n\t\t\t\t\t\t\tonFocus={saturationInput.onFocus}\n\t\t\t\t\t\t\tonBlur={saturationInput.onBlur}\n\t\t\t\t\t\t\tonChange={saturationInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={lightnessInput.value}\n\t\t\t\t\t\t\tonFocus={lightnessInput.onFocus}\n\t\t\t\t\t\t\tonBlur={lightnessInput.onBlur}\n\t\t\t\t\t\t\tonChange={lightnessInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={alphaInput.value}\n\t\t\t\t\t\t\tonFocus={alphaInput.onFocus}\n\t\t\t\t\t\t\tonBlur={alphaInput.onBlur}\n\t\t\t\t\t\t\tonChange={alphaInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<div className={labelCss}>RGBA:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={redInput.value}\n\t\t\t\t\t\t\tonFocus={redInput.onFocus}\n\t\t\t\t\t\t\tonBlur={redInput.onBlur}\n\t\t\t\t\t\t\tonChange={redInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={greenInput.value}\n\t\t\t\t\t\t\tonFocus={greenInput.onFocus}\n\t\t\t\t\t\t\tonBlur={greenInput.onBlur}\n\t\t\t\t\t\t\tonChange={greenInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={blueInput.value}\n\t\t\t\t\t\t\tonFocus={blueInput.onFocus}\n\t\t\t\t\t\t\tonBlur={blueInput.onBlur}\n\t\t\t\t\t\t\tonChange={blueInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={alphaInput.value}\n\t\t\t\t\t\t\tonFocus={alphaInput.onFocus}\n\t\t\t\t\t\t\tonBlur={alphaInput.onBlur}\n\t\t\t\t\t\t\tonChange={alphaInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<div className={labelCss}>Hex:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={inputCss}\n\t\t\t\t\t\t\tvalue={hexInput.value}\n\t\t\t\t\t\t\tonFocus={hexInput.onFocus}\n\t\t\t\t\t\t\tonBlur={hexInput.onBlur}\n\t\t\t\t\t\t\tonChange={hexInput.onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tlet newSelectedColorIndex = -1\n\t\t\t\t\t\t\tPalettesStore.update((s) => {\n\t\t\t\t\t\t\t\tconst palette = s.palettesById[selectedPaletteId]\n\t\t\t\t\t\t\t\tpalette.colors.splice(selectedColorIndex, 1)\n\t\t\t\t\t\t\t\tnewSelectedColorIndex = Math.max(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tMath.min(palette.colors.length - 1, selectedColorIndex - 1),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\ts.selectedColorIndex = newSelectedColorIndex\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Swatch\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className={labelWrapperCss}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={showHue}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\t\ts.showHue = e.currentTarget.checked\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tHue\n\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={showSaturation}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\t\ts.showSaturation = e.currentTarget.checked\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tSaturation\n\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={showLightness}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\t\ts.showLightness = e.currentTarget.checked\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tLightness\n\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tchecked={showAlpha}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tUiStore.update((s) => {\n\t\t\t\t\t\t\t\t\t\ts.showAlpha = e.currentTarget.checked\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tAlpha\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t{lastColor && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tapplyInterpolation(linearInterpolation)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tInterpolate: Linear\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tapplyInterpolation(easeInInterpolation())\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tInterpolate: Ease In\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tapplyInterpolation(easeOutInterpolation())\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tInterpolate: Ease Out\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tapplyInterpolation(easeInOutInterpolation())\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tInterpolate: Ease In Out\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst toolbarCss = css({\n\tflex: '1 0 auto',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\toverflow: 'auto',\n\twidth: '100%',\n\tgap: '5px',\n\tcolor: 'gray',\n\tfontSize: '10px',\n\n\t[`@media (min-width: ${BREAKPOINT})`]: {\n\t\tmaxWidth: '300px',\n\t\theight: '100%',\n\t},\n})\n\nconst labelWrapperCss = css({\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n\talignItems: 'center',\n\tgap: '5px',\n\n\t'& > label': {\n\t\tflex: 'auto',\n\t\ttextAlign: 'center',\n\t},\n})\n\nconst labelCss = css({\n\twhiteSpace: 'nowrap',\n})\n\nconst inputCss = css({\n\twidth: '100%',\n})\n\nconst outputCss = css({\n\tflex: 'none',\n\twidth: '100%',\n\tresize: 'vertical',\n})\n\nconst buttonRowCss = css({\n\tdisplay: 'flex',\n\tflexDirection: 'row',\n\tflexWrap: 'wrap',\n\tgap: '5px',\n\n\t'& > button': {\n\t\tflex: 'auto',\n\t},\n})\n\nconst format = new Intl.NumberFormat('en-US', { useGrouping: false })\n\nfunction numberToString(v: number) {\n\treturn isNaN(v) ? '' : format.format(v)\n}\n\nfunction rgbValueFromString(v: string): number {\n\tconst value = parseFloat(v)\n\treturn isNaN(value) ? 0 : value\n}\n\nfunction hueFromString(v: string): number {\n\tconst value = parseFloat(v)\n\treturn isNaN(value) ? 0 : value / 360\n}\n\nfunction hueToString(v: number): string {\n\treturn numberToString(v * 360)\n}\n\nfunction percentFromString(v: string): number {\n\tconst value = parseFloat(v)\n\treturn isNaN(value) ? 0 : value / 100\n}\n\nfunction percentToString(v: number): string {\n\treturn numberToString(v * 100)\n}\n\nfunction setRGBA(r: number, g: number, b: number, a: number) {\n\tconst { selectedColorIndex, selectedPaletteId } = UiStore.getRawState()\n\tconst newColor = WrappedColor.rgb(r, g, b).alpha(a)\n\tPalettesStore.update((s) => {\n\t\tconst color = s.palettesById[selectedPaletteId].colors[selectedColorIndex]\n\t\tif (color) {\n\t\t\tcolor.hue = newColor.hue() / 360\n\t\t\tcolor.saturation = newColor.saturationl() / 100\n\t\t\tcolor.lightness = newColor.lightness() / 100\n\t\t\tcolor.alpha = newColor.alpha()\n\t\t}\n\t})\n}\n\nfunction identity<T>(v: T): T {\n\treturn v\n}\n\nfunction onFocusSelect(e: React.FocusEvent<HTMLInputElement>) {\n\te.currentTarget.setSelectionRange(0, e.currentTarget.value.length)\n}\n","import { useMemo } from 'react'\nimport { colorToHexString } from '../fun/colorToHexString'\nimport { join } from '../fun/join'\nimport { joinArrayWith } from '../fun/joinArrayWith'\nimport { joinWith } from '../fun/joinWith'\nimport { wrapColor } from '../fun/wrapColor'\nimport { OutputFormat } from '../model/OutputFomat'\nimport { IPalettesStore } from '../store/PalettesStore'\n\nexport function useOutput(\n\tpalettesById: IPalettesStore['palettesById'],\n\tpaletteOrder: IPalettesStore['paletteOrder'],\n\toutputFormat: OutputFormat,\n\tfileName: string,\n): string {\n\treturn useMemo((): string => {\n\t\tswitch (outputFormat) {\n\t\t\tcase OutputFormat.Gimp:\n\t\t\t\treturn (\n\t\t\t\t\tjoinWith('\\n')(\n\t\t\t\t\t\t`GIMP Palette`,\n\t\t\t\t\t\t`Name: ${fileName}`,\n\t\t\t\t\t\t`#`,\n\t\t\t\t\t\tjoinArrayWith('\\n')(\n\t\t\t\t\t\t\tpaletteOrder.map((paletteId, paletteIndex): string => {\n\t\t\t\t\t\t\t\tconst palette = palettesById[paletteId]\n\t\t\t\t\t\t\t\treturn joinArrayWith('\\n')(\n\t\t\t\t\t\t\t\t\tpalette.colors.map((color, index) => {\n\t\t\t\t\t\t\t\t\t\tconst wrappedColor = wrapColor(color)\n\t\t\t\t\t\t\t\t\t\treturn join(\n\t\t\t\t\t\t\t\t\t\t\tjoinWith(' ')(\n\t\t\t\t\t\t\t\t\t\t\t\tMath.round(wrappedColor.red())\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.padStart(3, ' '),\n\t\t\t\t\t\t\t\t\t\t\t\tMath.round(wrappedColor.green())\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.padStart(3, ' '),\n\t\t\t\t\t\t\t\t\t\t\t\tMath.round(wrappedColor.blue())\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.padStart(3, ' '),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t'\\t',\n\t\t\t\t\t\t\t\t\t\t\tcolor.name ||\n\t\t\t\t\t\t\t\t\t\t\t\tjoin(\n\t\t\t\t\t\t\t\t\t\t\t\t\tpalette.name || join(`Palette`, paletteIndex),\n\t\t\t\t\t\t\t\t\t\t\t\t\t`-`,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t) + '\\n'\n\t\t\t\t)\n\t\t\tcase OutputFormat.Synfig:\n\t\t\t\treturn (\n\t\t\t\t\tjoinWith('\\n\\n')(\n\t\t\t\t\t\tjoinWith('\\n')(`SYNFIGPAL1.0`, fileName),\n\t\t\t\t\t\tjoinArrayWith('\\n\\n')(\n\t\t\t\t\t\t\tpaletteOrder.map((paletteId, paletteIndex): string => {\n\t\t\t\t\t\t\t\tconst palette = palettesById[paletteId]\n\t\t\t\t\t\t\t\treturn joinArrayWith('\\n\\n')(\n\t\t\t\t\t\t\t\t\tpalette.colors.map((color) => {\n\t\t\t\t\t\t\t\t\t\tconst wrappedColor = wrapColor(color)\n\t\t\t\t\t\t\t\t\t\treturn joinWith('\\n')(\n\t\t\t\t\t\t\t\t\t\t\twrappedColor.red() / 255,\n\t\t\t\t\t\t\t\t\t\t\twrappedColor.green() / 255,\n\t\t\t\t\t\t\t\t\t\t\twrappedColor.blue() / 255,\n\t\t\t\t\t\t\t\t\t\t\twrappedColor.alpha(),\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t) + '\\n'\n\t\t\t\t)\n\t\t\tcase OutputFormat.Css:\n\t\t\t\treturn (\n\t\t\t\t\tjoinWith('\\n')(\n\t\t\t\t\t\t`:root {`,\n\t\t\t\t\t\tjoinArrayWith('\\n\\n')(\n\t\t\t\t\t\t\tpaletteOrder.map((paletteId, paletteIndex): string => {\n\t\t\t\t\t\t\t\tconst palette = palettesById[paletteId]\n\t\t\t\t\t\t\t\treturn joinArrayWith('\\n')(\n\t\t\t\t\t\t\t\t\tpalette.colors.map((color, index): string =>\n\t\t\t\t\t\t\t\t\t\tjoin(\n\t\t\t\t\t\t\t\t\t\t\t`\\t--`,\n\t\t\t\t\t\t\t\t\t\t\tcolor.name ||\n\t\t\t\t\t\t\t\t\t\t\t\tjoin(\n\t\t\t\t\t\t\t\t\t\t\t\t\tpalette.name || join(`Palette`, paletteIndex),\n\t\t\t\t\t\t\t\t\t\t\t\t\t`-`,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t`: `,\n\t\t\t\t\t\t\t\t\t\t\tcolorToHexString(wrapColor(color)),\n\t\t\t\t\t\t\t\t\t\t\t`;`,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t`}`,\n\t\t\t\t\t) + '\\n'\n\t\t\t\t)\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`[qjqvd9] Unknown OutputFormat: ${outputFormat}`)\n\t\t}\n\t}, [palettesById, paletteOrder, outputFormat, fileName])\n}\n","export function easeInInterpolation(pow = 2) {\n\treturn (t: number): number => {\n\t\treturn Math.pow(t, pow)\n\t}\n}\n","export function easeOutInterpolation(pow = 2) {\n\treturn (t: number): number => {\n\t\treturn 1 - Math.pow(1 - t, pow)\n\t}\n}\n","export function easeInOutInterpolation(pow = 2) {\n\treturn (t: number): number => {\n\t\tif ((t *= 2) < 1) return 0.5 * Math.pow(t, pow)\n\t\treturn 1 - 0.5 * Math.abs(Math.pow(2 - t, pow))\n\t}\n}\n","import { css } from '@emotion/css/macro'\nimport React from 'react'\nimport { BREAKPOINT } from '../model/constants'\nimport { UiStore } from '../store/UiStore'\nimport { PalettesComp } from './PalettesComp'\nimport { ToolbarComp } from './ToolbarComp'\n\nexport interface AppCompProps {}\n\nexport function AppComp(props: AppCompProps) {\n\tconst background = UiStore.useState((s) => s.background)\n\treturn (\n\t\t<div\n\t\t\tclassName={appCss}\n\t\t\tstyle={{ background: background ? 'white' : 'black' }}\n\t\t>\n\t\t\t<PalettesComp />\n\t\t\t<ToolbarComp />\n\t\t</div>\n\t)\n}\n\nconst appCss = css({\n\tdisplay: 'flex',\n\twidth: '100%',\n\theight: '100%',\n\tflexDirection: 'column',\n\toverflow: 'auto',\n\tbackground: 'black',\n\tpadding: '5px',\n\tgap: '5px',\n\t[`@media (min-width: ${BREAKPOINT})`]: {\n\t\tflexDirection: 'row',\n\t\tpadding: '20px',\n\t\tgap: '20px',\n\t},\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppComp } from './comp/AppComp'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AppComp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\nserviceWorkerRegistration.register()\n"],"sourceRoot":""}